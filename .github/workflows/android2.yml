name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        include:
          - name: android-arm
            runner: ubuntu-latest
            target: aarch64-linux-android
            command: cross
 

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Android SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        mkdir -p $HOME/sdk/cmdline-tools
        unzip -q commandlinetools-linux-8512546_latest.zip -d $HOME/sdk/cmdline-tools
        yes | $HOME/sdk/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/sdk "platform-tools" "platforms;android-30" "build-tools;30.0.3" "ndk;21.3.6528147"
        echo "export ANDROID_SDK_ROOT=$HOME/sdk" >> $GITHUB_ENV
        echo "export PATH=$PATH:$HOME/sdk/platform-tools" >> $GITHUB_ENV

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        profile: minimal

    - name: Build Rust components
      run: |
        mkdir -p app/src/main/cpp/libs/arm64-v8a/rust_rcs/lib/
        cp librust_rcs_client.so app/src/main/cpp/libs/arm64-v8a/rust_rcs/lib/

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: app/build/outputs/apk/debug/app-debug.apk
